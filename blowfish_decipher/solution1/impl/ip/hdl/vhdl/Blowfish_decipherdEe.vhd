-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.1
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity Blowfish_decipherdEe_rom is 
    generic(
             dwidth     : integer := 32; 
             awidth     : integer := 8; 
             mem_size    : integer := 256
    ); 
    port (
          addr0      : in std_logic_vector(awidth-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(dwidth-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of Blowfish_decipherdEe_rom is 

signal addr0_tmp : std_logic_vector(awidth-1 downto 0); 
type mem_array is array (0 to mem_size-1) of std_logic_vector (dwidth-1 downto 0); 
signal mem : mem_array := (
    0 => "01000110000111010111010001100110", 
    1 => "10010010010110011111000110100011", 
    2 => "11011101110010011100100010111110", 
    3 => "00000000110111100110101000100101", 
    4 => "10011010000010001100101101100010", 
    5 => "00101100110001000000010011110111", 
    6 => "00101010010011111101111010100001", 
    7 => "00011100101101110101000110110101", 
    8 => "00100100111101101010111110000010", 
    9 => "10000000011001100100100110101000", 
    10 => "11101001100011110011111100111010", 
    11 => "10000001010110011101111101111000", 
    12 => "00100100011100010110001010101011", 
    13 => "11010001000000111111101110111100", 
    14 => "01111100011100010010110001010100", 
    15 => "11101100001010101111111110100101", 
    16 => "11000000011111100011100111100110", 
    17 => "01001011100110011010001110101001", 
    18 => "00011101111010011111001111101010", 
    19 => "01111000001100011001001001011001", 
    20 => "01010000011001011101111011100111", 
    21 => "00111110001010010110001011011010", 
    22 => "01111110000111100010010010010100", 
    23 => "01001111101000111010110011101101", 
    24 => "01010111011001001101011010111010", 
    25 => "11110011001101000101111010110101", 
    26 => "11000111000000111001000011010111", 
    27 => "11010000011111000100101110010001", 
    28 => "00100110000100111011111000000110", 
    29 => "11000001111100001100111001010001", 
    30 => "00111011010000111111111110001001", 
    31 => "00100100101000010011101011011100", 
    32 => "10000110011000110000010110101010", 
    33 => "10111000000101000011010001101010", 
    34 => "01000010101100111010011000001111", 
    35 => "10100110011000111101001000000010", 
    36 => "01100001101111010110010111101101", 
    37 => "11100001001110100011110101101100", 
    38 => "10100111001011100100011100101101", 
    39 => "10011000011110100110111001001111", 
    40 => "00010100001010000100101111000000", 
    41 => "01100001011101110110110001001011", 
    42 => "01010001011010101000111111010100", 
    43 => "01011010001110110000110001001100", 
    44 => "10001010010000101110101011110110", 
    45 => "10110101111001111110100000110001", 
    46 => "10100001100010011110111100010111", 
    47 => "01000100011011001101000001110110", 
    48 => "11000101100000010010100011010111", 
    49 => "00111010001011111100101100100110", 
    50 => "10001110001110010001111111110101", 
    51 => "00100000001011000111100101110110", 
    52 => "11101000010000100100100011100100", 
    53 => "11100100101111001111000110011100", 
    54 => "00010101000111011010110101001111", 
    55 => "10101000110111011111111010111011", 
    56 => "00000010001010010101001110110100", 
    57 => "11011111110001100001011100010011", 
    58 => "01011011100010101001011110000001", 
    59 => "01101100101011110000110111110001", 
    60 => "10011100100111101100111001110001", 
    61 => "00010111110000110011000111011111", 
    62 => "01111010010100000110000110110100", 
    63 => "10011101001000011110011011101111", 
    64 => "11001010100111011110101101010101", 
    65 => "00010010101111111101111100000011", 
    66 => "10111000011101000110011110111011", 
    67 => "01010111111100110111001111110101", 
    68 => "01000000010000000100010001111110", 
    69 => "00111000101010101011111111100111", 
    70 => "11001010000001110000011000101001", 
    71 => "00110100010111000110110110110000", 
    72 => "01111101000011011110000110100111", 
    73 => "11011110010000111000001110010101", 
    74 => "00011100011000100110101001011110", 
    75 => "10100101100010101010001100100010", 
    76 => "01010010001101000110110110000000", 
    77 => "01101110001011110111011000100110", 
    78 => "01010100011000111100010101110000", 
    79 => "11110011101101100001010100000101", 
    80 => "01010101111000001101001101011110", 
    81 => "10011000100110000010011101010000", 
    82 => "11000101000100111110101000010011", 
    83 => "10111110010010011001010010010110", 
    84 => "00001110001111001111000100110001", 
    85 => "10010100110011000101100001011010", 
    86 => "00001110100010110001011010100100", 
    87 => "11000011011011010110110100011011", 
    88 => "11111011100010111101100111101111", 
    89 => "10011100011010111000110001001100", 
    90 => "01010010000001101001001111111111", 
    91 => "01101101100001010110001110011110", 
    92 => "10000010100010101111010111001000", 
    93 => "00111011110001110011001010001011", 
    94 => "01000000100010100111001101110111", 
    95 => "11101110111000111110010000101001", 
    96 => "01100111101000100101111000101010", 
    97 => "10011010011001111111110001000111", 
    98 => "10000001000111000110111110001110", 
    99 => "11111000011000110000010110101101", 
    100 => "11110100110011000111010011110110", 
    101 => "11101001101110101011000110001011", 
    102 => "10010001001101110111111110000101", 
    103 => "11111101011010011110110011101000", 
    104 => "10011001000111000101010101000000", 
    105 => "00101010111100100000010101000111", 
    106 => "01100001000101111101000001100101", 
    107 => "00110000001111101010010011001011", 
    108 => "11001100011000100001111011011110", 
    109 => "01111000011001001011001111100100", 
    110 => "11110011010011101101000101110101", 
    111 => "11001001100011101111011100010110", 
    112 => "10100011010110000010111010111101", 
    113 => "10000011110001101100100101110011", 
    114 => "10010101111001100111010100011101", 
    115 => "10101011101011011011100010100000", 
    116 => "00110101010111111100010011100001", 
    117 => "00110010101100001100000111001100", 
    118 => "10111001000100011000001110101111", 
    119 => "10001011011011011111011101000010", 
    120 => "01010000000101111001110001011101", 
    121 => "01110011011100110100101001000010", 
    122 => "00000010110101001101111111110001", 
    123 => "01110000010101001001101010110110", 
    124 => "10100011011000100011001000111110", 
    125 => "01001110100011000100101001100100", 
    126 => "10100111010000011011100010011001", 
    127 => "01010111111001111101100000101011", 
    128 => "01110100101011010111000110111001", 
    129 => "11001001101011001111000111011010", 
    130 => "10100011100011010001000101111001", 
    131 => "10010010010000111001001110000100", 
    132 => "11100100010110011110011010111101", 
    133 => "01011011101111111101111111001001", 
    134 => "00011110011011110100100101111100", 
    135 => "01110011000010011101100011011111", 
    136 => "11100110100001011110010101100001", 
    137 => "01011000010111100111011001111000", 
    138 => "10000111111111000000110101011001", 
    139 => "11000001101100001001101111001010", 
    140 => "00001110110000011101111010010100", 
    141 => "10010011000000110111011011010101", 
    142 => "01010101011110001110011000110001", 
    143 => "01000111110110001110100000010000", 
    144 => "10000010011010011001010011100111", 
    145 => "10101101100011010111101001100111", 
    146 => "01010111110010100001110101100011", 
    147 => "10110001111001000101111100001001", 
    148 => "10111101010101010010010100100001", 
    149 => "11111100001101111001110001010101", 
    150 => "11001000111101011111010111010011", 
    151 => "00100110110101010101011011101101", 
    152 => "10010011101101101010010100010001", 
    153 => "01101101110001000001111001001011", 
    154 => "01110000010110101001111011010010", 
    155 => "11011100010101100110100001101101", 
    156 => "00001011001000001110000110100001", 
    157 => "00110111101100001100101010111010", 
    158 => "00011111101111100010110110011000", 
    159 => "10001100000011011010000111011001", 
    160 => "01001000111100110001100111010111", 
    161 => "11101000000001001010011100010010", 
    162 => "10011110100000001000101001101000", 
    163 => "01001010111111101100110001010100", 
    164 => "01100111010100101001100000100110", 
    165 => "01011000011010101000000011100001", 
    166 => "01111101100100101100110001001100", 
    167 => "00110110000011010010011101101001", 
    168 => "10110000111011100001010101100111", 
    169 => "00001101110001110100101111111000", 
    170 => "11110000101011100100011000011001", 
    171 => "00101101111011110011101101100101", 
    172 => "10000111101000011001011000101011", 
    173 => "11110011010000111001101111001110", 
    174 => "01001011110100011001111000110110", 
    175 => "11100011011111110110000000001000", 
    176 => "00110001111101101101001110100110", 
    177 => "11001011010100100010110110010001", 
    178 => "01000110110000011010101101101111", 
    179 => "10001011010100100101001111100011", 
    180 => "10011101010100101101101000000110", 
    181 => "11100110011001111011101010101001", 
    182 => "01101101010111100001010010100010", 
    183 => "00000101111010001001100000000001", 
    184 => "00110100100100110001110001111011", 
    185 => "11111011100011111010110100000010", 
    186 => "01010101001110110111101011000100", 
    187 => "11011110010110111011001100101011", 
    188 => "11110010100010110101100001100100", 
    189 => "11011100100000111111000100101010", 
    190 => "11011010111001101001011000111111", 
    191 => "01111111101001000011000001110000", 
    192 => "10011101100101101101011000000011", 
    193 => "11100110011101101001111010111101", 
    194 => "01101111100110001001000100101010", 
    195 => "00110100100100011000000110000101", 
    196 => "01111110101001101101110000000100", 
    197 => "11000000010011010010010011111010", 
    198 => "00101101001100100110100010101001", 
    199 => "11101010111000011100010011001101", 
    200 => "01010010011010010101110110101100", 
    201 => "01100111000110011010000001011010", 
    202 => "11000001111000001011011000101001", 
    203 => "01001110101010010000010011111000", 
    204 => "10000110010010111101100100011010", 
    205 => "10000000110011100110001010010000", 
    206 => "01101000000001110001001111000000", 
    207 => "11100011001010000100101001000111", 
    208 => "11110010101101110000011110101100", 
    209 => "00100011011101010000110010100000", 
    210 => "01010010111110111001011100101011", 
    211 => "01011101011100110010110111100110", 
    212 => "10011101111111011011001000010111", 
    213 => "10100001011111000001000000111101", 
    214 => "11111010100110111101111000101010", 
    215 => "10011001111100001111101011100000", 
    216 => "00000101100100110001100011010110", 
    217 => "10111000010001010010101100001011", 
    218 => "11101001000110111011100110101111", 
    219 => "11001110110001001100111111000000", 
    220 => "00001101001111101011100101101101", 
    221 => "11101100100011011001001100011111", 
    222 => "11000001101011100011101010101000", 
    223 => "11101100000101010110100000101010", 
    224 => "00111011110000011110000010000010", 
    225 => "10000011000110101011010111000011", 
    226 => "00010001000001000010101111110110", 
    227 => "11110010101101100101011011010100", 
    228 => "10111100101011100010000101000001", 
    229 => "11010011111000110101100100010110", 
    230 => "11011010010110111100010010100011", 
    231 => "00111111011111100011110111001101", 
    232 => "00101101111101100011101110011110", 
    233 => "11101010001000011011000111000110", 
    234 => "10111100000110011000011100100100", 
    235 => "00010110011000111000000111011000", 
    236 => "00100100001000111100000110111111", 
    237 => "10000101101000010010001010011100", 
    238 => "11111000011110001001001101010011", 
    239 => "10101000111010011101001011110010", 
    240 => "10101001101101110111000010111101", 
    241 => "11000110110111110000111101010010", 
    242 => "00110111101000010101011011001000", 
    243 => "10011110001100100010011011101100", 
    244 => "11010011110000100011010110000001", 
    245 => "10101000101100000110100001100111", 
    246 => "01010110100100100110100001001101", 
    247 => "10110001011101100110110000000101", 
    248 => "00010000100101101110010001111000", 
    249 => "01100110001010010101101000100110", 
    250 => "00101100111101001000111010101000", 
    251 => "01010101011000011011001010100000", 
    252 => "10111101110100000101110111100011", 
    253 => "01111000000000001001010110100110", 
    254 => "10111100111111000100010101110110", 
    255 => "10000100001101110100100110101001" );


attribute EQUIVALENT_REGISTER_REMOVAL : string;
begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity Blowfish_decipherdEe is
    generic (
        DataWidth : INTEGER := 32;
        AddressRange : INTEGER := 256;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of Blowfish_decipherdEe is
    component Blowfish_decipherdEe_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    Blowfish_decipherdEe_rom_U :  component Blowfish_decipherdEe_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


